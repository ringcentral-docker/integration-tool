name: Build and Push Image

on:
  push:
    branches:
      - main
    paths:
      # '*' matches any character except '/'
      - 'images/*'
      - '.github/workflows/*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        env:
          DOCKER_HUB_USERNAME: ${{ secrets. DOCKER_HUB_USERNAME }} 
          DOCKER_HUB_PASSWORD: ${{ secrets. DOCKER_HUB_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
        run: |
          echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
          echo $GITHUB_TOKEN | docker login docker.pkg.github.com --username $GITHUB_ACTOR --password-stdin
          
      - name: Build & Push Image -- ringcentral/int-gsuite-cli
        run: |
          cd images
          IMAGE_NAME=ringcentral/int-gsuite-cli
          VERSION="$(awk -F ' '  '/ENV NODE_VERSION/ {print $3}' Dockerfile.gsuite-cli)"
          docker build -t ${IMAGE_NAME} -f Dockerfile.gsuite-cli .
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:latest"
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:${VERSION}"
          docker push "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}:${VERSION}"

      - name: Build & Push Image -- ringcentral/sentry-cli
        run: |
          cd images
          IMAGE_NAME=ringcentral/sentry-cli
          VERSION="$(awk -F ' '  '/ENV NODE_VERSION/ {print $3}' Dockerfile.sentry-cli)"
          docker build -t ${IMAGE_NAME} -f Dockerfile.sentry-cli .
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:latest"
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:${VERSION}"
          docker push "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}:${VERSION}"

      - name: Build & Push Image -- ringcentral/int-webstore-cli
        run: |
          cd images
          IMAGE_NAME=ringcentral/int-webstore-cli
          VERSION="$(awk -F '[@]'  '/chrome-webstore-upload-cli/ {print $2}' Dockerfile.webstore-cli)"
          docker build -t ${IMAGE_NAME} -f Dockerfile.webstore-cli .
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:latest"   
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:${VERSION}"  
          docker push "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}:${VERSION}"

      - name: Build & Push Image -- ringcentral/int-node-zip
        run: |
          cd images
          IMAGE_NAME=ringcentral/int-node-zip 
          VERSION="$(awk -F ' '  '/ENV NODE_VERSION/ {print $3}' Dockerfile.node)"
          docker build -t ${IMAGE_NAME} -f Dockerfile.node .
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:latest"
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:${VERSION}"
          docker push "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}:${VERSION}"

      - name: Build & Push Image -- ringcentral/int-node-awscli
        run: |
          cd images
          IMAGE_NAME=ringcentral/int-node-awscli
          VERSION="$(awk -F ' '  '/ENV NODE_VERSION/ {print $3}' Dockerfile.node.awscli)"
          docker build -t ${IMAGE_NAME} -f Dockerfile.node.awscli .
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:latest"
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:${VERSION}"
          docker push "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}:${VERSION}"

      - name: Build & Push Image -- ringcentral/int-zendesk-cli
        run: |
          cd images
          IMAGE_NAME=ringcentral/int-zendesk-cli
          VERSION="$(awk -F ' '  '/ENV NODE_VERSION/ {print $3}' Dockerfile.zendesk-cli)"
          docker build -t ${IMAGE_NAME} -f Dockerfile.zendesk-cli .
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:latest"
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:${VERSION}"
          docker push "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}:${VERSION}"

      - name: Build & Push Image -- ringcentral/node-sdet-cli
        run: |
          cd images
          IMAGE_NAME=ringcentral/node-sdet-cli
          docker build -t ${IMAGE_NAME} -f Dockerfile.node-sdet-cli .
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}:latest"

      - name: Build & Push Image -- ringcentral/sonarscan
        run: |
          cd images
          IMAGE_NAME=ringcentral/sonarscan
          VERSION="$(awk -F ' '  '/ENV NODE_VERSION/ {print $3}' Dockerfile.sonarscan)"
          docker build -t ${IMAGE_NAME} -f Dockerfile.sonarscan .
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:latest"
          docker tag "${IMAGE_NAME}" "${IMAGE_NAME}:${VERSION}"
          docker push "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}:${VERSION}"
